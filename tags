!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	k,class	/vim9script classes/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/ag/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
<C-Z>	init.vim	/^nnoremap <C-Z> :update<CR>$/;"	m
<C-c>	init.vim	/^map <C-c> "+y$/;"	m
<C-j>	init.vim	/^nnoremap <C-j> :cnext<CR>$/;"	m
<C-k>	init.vim	/^nnoremap <C-k> :cprevious<CR>$/;"	m
<C-n>	init.vim	/^nnoremap <C-n> :cnext<CR>$/;"	m
<C-p>	init.vim	/^nnoremap <C-p> :cprevious<CR>$/;"	m
<Esc>	init.vim	/^nnoremap <Esc> :nohlsearch<CR><Esc>$/;"	m
<Leader>b	init.vim	/^nnoremap <Leader>b :Buffers<CR>$/;"	m
<Leader>c	init.vim	/^map <Leader>c  <Plug>Commentary$/;"	m
<Leader>c	init.vim	/^nmap <Leader>c  <Plug>Commentary$/;"	m
<Leader>c	init.vim	/^xmap <Leader>c  <Plug>Commentary$/;"	m
<Leader>cc	init.vim	/^nmap <Leader>cc <Plug>CommentaryLine$/;"	m
<Leader>dd	init.vim	/^nnoremap <Leader>dd :CocFzfList diagnostics --current-buf<CR>$/;"	m
<Leader>ds	init.vim	/^nnoremap <Leader>ds :CocFzfList symbols<CR>$/;"	m
<Leader>e	init.vim	/^nnoremap <Leader>e :quit<CR>$/;"	m
<Leader>ff	init.vim	/^nnoremap <Leader>ff :Rg<CR>$/;"	m
<Leader>l	init.vim	/^nnoremap <Leader>l :Files<CR>$/;"	m
<Leader>pWs	init.vim	/^nnoremap <Leader>pWs :call fzf#run(fzf#wrap({'source': 'rg --column --line-number --no-heading -/;"	m
<Leader>pws	init.vim	/^nnoremap <Leader>pws :call fzf#run(fzf#wrap({'source': 'rg --column --line-number --no-heading -/;"	m
<Leader>qq	init.vim	/^nnoremap <Leader>qq :call ToggleQuickFix()<cr>$/;"	m
<Leader>w	init.vim	/^nnoremap <Leader>w :bw<CR>$/;"	m
FzfTagsCurrWord	init.vim	/^function! FzfTagsCurrWord()$/;"	f
K	init.vim	/^nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
RG	init.vim	/^command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)$/;"	c
RipgrepFzf	init.vim	/^function! RipgrepFzf(query, fullscreen)$/;"	f
ToggleQuickFix	init.vim	/^function! ToggleQuickFix()$/;"	f
airline#extensions#coc#error_symbol	init.vim	/^let airline#extensions#coc#error_symbol = ''$/;"	v
airline#extensions#coc#warning_symbol	init.vim	/^let airline#extensions#coc#warning_symbol = ''$/;"	v
g:airline#extensions#coc#show_coc_status	init.vim	/^let g:airline#extensions#coc#show_coc_status = 0$/;"	v
g:airline#extensions#hunks#enabled	init.vim	/^let g:airline#extensions#hunks#enabled = 1$/;"	v
g:airline#extensions#hunks#non_zero_only	init.vim	/^let g:airline#extensions#hunks#non_zero_only = 1$/;"	v
g:airline#extensions#whitespace#enabled	init.vim	/^let g:airline#extensions#whitespace#enabled = 0$/;"	v
g:coc_global_extensions	init.vim	/^let g:coc_global_extensions = [$/;"	v
g:fzf_colors	init.vim	/^let g:fzf_colors =$/;"	v
g:fzf_history_dir	init.vim	/^let g:fzf_history_dir = '~\/.local\/share\/fzf-history'$/;"	v
g:fzf_layout	init.vim	/^let g:fzf_layout = exists('$TMUX') ? {'tmux': '-p90%,80%'} : {'window': { 'width': 0.9, 'height'/;"	v
g:fzf_preview_window	init.vim	/^let g:fzf_preview_window = ['right:50%', 'ctrl-\\']$/;"	v
gd	init.vim	/^nmap <silent> gd <Plug>(coc-definition)$/;"	m
gr	init.vim	/^nmap <silent> gr <Plug>(coc-references)$/;"	m
jk	init.vim	/^inoremap jk <Esc>$/;"	m
mapleader	init.vim	/^let mapleader = ","$/;"	v
snippets.ultisnips.pythonPrompt	coc-settings.json	/^  "snippets.ultisnips.pythonPrompt": false$/;"	b
